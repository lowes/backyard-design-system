{
	"id": 0,
	"name": "@lowes-tech/bds-react/Password",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 42,
			"name": "default",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 1
		},
		{
			"id": 2,
			"name": "PasswordProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 40,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.as"
					}
				},
				{
					"id": 3,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Children"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.children"
					}
				},
				{
					"id": 4,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM Class Name"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.className"
					}
				},
				{
					"id": 13,
					"name": "component",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Component to render text input with"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ComponentClass"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "FunctionComponent"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.component"
					}
				},
				{
					"id": 38,
					"name": "customIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Boolean prop to have custom icons show correct coloring"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.customIcon"
					}
				},
				{
					"id": 7,
					"name": "defaultToggle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not password is visible, toggled by default"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Default value of input"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.defaultValue"
					}
				},
				{
					"id": 5,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not input is disabled"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.disabled"
					}
				},
				{
					"id": 9,
					"name": "fill",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines fill color\nOnly useful for `filled` variant"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 39,
					"name": "hiddenLabel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.hiddenLabel"
					}
				},
				{
					"id": 8,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon Before Text Input"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					}
				},
				{
					"id": 16,
					"name": "interaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Initial interaction of component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.interaction"
					}
				},
				{
					"id": 15,
					"name": "itemAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon displayed after text input"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.itemAfter"
					}
				},
				{
					"id": 14,
					"name": "itemBefore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon displayed before text input"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.itemBefore"
					}
				},
				{
					"id": 11,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visual shape of text input"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "rounded"
							},
							{
								"type": "literal",
								"value": "squared"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.shape"
					}
				},
				{
					"id": 34,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Size of component."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "small"
							},
							{
								"type": "literal",
								"value": "large"
							},
							{
								"type": "literal",
								"value": "medium"
							},
							{
								"type": "literal",
								"value": "jumbo"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.size"
					}
				},
				{
					"id": 12,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visual state of component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "default"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "success"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "TextInputProps.state"
					}
				},
				{
					"id": 37,
					"name": "suffix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Adding a suffix abbreviation to the end of the field"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.suffix"
					}
				},
				{
					"id": 35,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Type of text input"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.type"
					}
				},
				{
					"id": 33,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Value of text input"
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.value"
					}
				},
				{
					"id": 10,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Display variant of text input"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "outlined"
							},
							{
								"type": "literal",
								"value": "filled"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "wrapperProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Wrapper props object for text input.\nUseful for setting the style of text input\nvisual container instead of input directly"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLDivElement"
							},
							{
								"type": "literal",
								"value": ""
							}
						],
						"name": "BackyardBaseProps"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.wrapperProps"
					}
				},
				{
					"id": 29,
					"name": "onBlur",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 30,
							"name": "onBlur",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onBlur` trigger event"
							},
							"parameters": [
								{
									"id": 31,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								},
								{
									"id": 32,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextInputProps.onBlur"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.onBlur"
					}
				},
				{
					"id": 17,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 18,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onChange` trigger event"
							},
							"parameters": [
								{
									"id": 19,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "ChangeEvent"
									}
								},
								{
									"id": 20,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextInputProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.onChange"
					}
				},
				{
					"id": 21,
					"name": "onClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 22,
							"name": "onClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onChange` trigger event"
							},
							"parameters": [
								{
									"id": 23,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "reference",
												"name": "MouseEvent"
											}
										],
										"name": "MouseEvent"
									}
								},
								{
									"id": 24,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextInputProps.onClick"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.onClick"
					}
				},
				{
					"id": 25,
					"name": "onFocus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 26,
							"name": "onFocus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onFocus` trigger event"
							},
							"parameters": [
								{
									"id": 27,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								},
								{
									"id": 28,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextInputProps.onFocus"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TextInputProps.onFocus"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						40,
						3,
						4,
						13,
						38,
						7,
						6,
						5,
						9,
						39,
						8,
						16,
						15,
						14,
						11,
						34,
						12,
						37,
						35,
						33,
						10,
						36
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						29,
						17,
						21,
						25
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "TextInputProps"
				}
			]
		},
		{
			"id": 41,
			"name": "PasswordRef",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reference",
				"name": "TextInputRef"
			}
		},
		{
			"id": 1,
			"name": "Password",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"comment": {
				"shortText": "Backyard React Password",
				"text": "Password text input that extends on TextInput's API\n\n <Password />\n\nTo include helper text, use `FormControl` and `FormHelperText` to sync states\n\n <FormControl>\n     <Password label=\"Password\" />\n     <FormHelperText>Enter a password</FormHelperText>\n </FormControl>\n"
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 2,
						"name": "PasswordProps"
					}
				],
				"name": "BDSForwardRef"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				42
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				2
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				41
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	]
}