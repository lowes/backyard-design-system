{
	"id": 0,
	"name": "@lowes-tech/bds-react/ClickAwayListener",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 15,
			"name": "default",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 1
		},
		{
			"id": 2,
			"name": "ClickAwayListener",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "bdsName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3
					]
				}
			]
		},
		{
			"id": 4,
			"name": "ClickAwayListenerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 5,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The wrapped element."
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 6,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 7,
											"name": "ref",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLElement"
													}
												],
												"name": "Ref"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												7
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 8,
					"name": "disableReactTree",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, the React tree is ignored and only the DOM tree is considered.\nThis prop changes how portaled elements are handled."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9,
					"name": "mouseEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The mouse event to listen to. You can disable the listener by providing `false`."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": false
							},
							{
								"type": "literal",
								"value": "onClick"
							},
							{
								"type": "literal",
								"value": "onMouseDown"
							},
							{
								"type": "literal",
								"value": "onMouseUp"
							}
						]
					}
				},
				{
					"id": 13,
					"name": "touchEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The touch event to listen to. You can disable the listener by providing `false`."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": false
							},
							{
								"type": "literal",
								"value": "onTouchEnd"
							},
							{
								"type": "literal",
								"value": "onTouchStart"
							}
						]
					}
				},
				{
					"id": 10,
					"name": "onClickAway",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 11,
							"name": "onClickAway",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback fired when a \"click away\" event is detected."
							},
							"parameters": [
								{
									"id": 12,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 14,
										"name": "ClickAwayEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						5,
						8,
						9,
						13
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						10
					]
				}
			]
		},
		{
			"id": 14,
			"name": "ClickAwayEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"name": "Document"
					}
				],
				"name": "React.MouseEvent"
			}
		},
		{
			"id": 1,
			"name": "ClickAwayListener",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"comment": {
				"shortText": "Listen for click events that occur somewhere in the document, outside of the element itself.\nFor instance, if you need to hide a menu when people click anywhere else on your page."
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 4,
						"name": "ClickAwayListenerProps"
					}
				],
				"name": "BDSFunctional"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				15
			]
		},
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				2
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				4
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				14
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	]
}