// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioTile Snapshots RadioTile default snapshot 1`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--surface shape--rounded type--radio"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots extra props RadioTile DOM props (id, className) snapshot 1`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--surface shape--rounded type--radio classname"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots prop: color RadioTile color snapshot 1`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--default shape--rounded type--radio"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots prop: color RadioTile color snapshot 2`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--subdued shape--rounded type--radio"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots prop: disabled RadioTile Disabled snapshot 1`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="true"
    class="c0 c1 color--surface shape--rounded type--radio disabled"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio disabled"
        disabled=""
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots themes RadioTile  theme snapshot 1`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,0%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,84%,45%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(0,0%,96%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--surface shape--rounded type--radio"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 84%, 45%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;

exports[`RadioTile Snapshots themes RadioTile  theme snapshot 2`] = `
<DocumentFragment>
  .c3 {
  width: var(--style-icon-width);
  height: var(--style-icon-height);
}

.c3:not(.color-override) g,
.c3:not(.color-override) path {
  fill: var(--style-icon-color);
}

.c3:not(.color-override) g[stroke-width],
.c3:not(.color-override) path[stroke-width] {
  stroke: var(--style-icon-color);
  fill: none;
}

.c3:not(.color-override) g[stroke-width] *,
.c3:not(.color-override) path[stroke-width] * {
  fill: none;
}

.c3.start {
  margin-right: var(--bds-sizes-size-8);
}

.c3.end {
  margin-left: var(--bds-sizes-size-8);
}

.c2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  position: relative;
}

.c2 input {
  height: 100%;
  width: 100%;
  position: absolute;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.c2 input:checked + label::after {
  opacity: 1;
}

.c2 input:not(:checked) + label::after {
  opacity: 0;
}

.c2 input + label::before {
  content: "";
  position: absolute;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  vertical-align: center;
  top: 0;
  left: 0;
  border-width: var(--bds-border-width-sm);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  height: var(--bds-sizes-size-16);
  width: var(--bds-sizes-size-16);
  -webkit-transition: 0.2s all ease-in-out;
  transition: 0.2s all ease-in-out;
}

.c2 input + label::after {
  content: "";
  position: absolute;
  left: var(--bds-sizes-size-3);
  top: var(--bds-sizes-size-3);
  opacity: 0;
  border-width: var(--bds-sizes-size-5);
  border-style: solid;
  border-radius: var(--bds-border-radius-circle);
  -webkit-transition: opacity 0.2s ease-in-out;
  transition: opacity 0.2s ease-in-out;
}

.c2 input:not(:checked).enabled + label::before,
.c2 input:not(:checked):enabled + label::before {
  border-color: var(--bds-color-border-default);
}

.c2 input:not(:checked).hover + label::before,
.c2 input:not(:checked):hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:not(:checked).focus + label::before,
.c2 input:not(:checked):focus + label::before {
  border-color: var(--bds-color-action-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:not(:checked).disabled,
.c2 input:not(:checked):disabled,
.c2 input:not(:checked).disabled + label,
.c2 input:not(:checked):disabled + label {
  cursor: not-allowed;
}

.c2 input:not(:checked).disabled + label::before,
.c2 input:not(:checked):disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:not(:checked),
.c2 input:not(:checked) + label {
  cursor: pointer;
}

.c2 input:not(:checked) + label::before {
  background-color: transparent;
  border-color: var(--bds-color-border-default);
}

.c2 input:checked.enabled + label::before,
.c2 input:checked:enabled + label::before {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.enabled + label::after,
.c2 input:checked:enabled + label::after {
  border-color: var(--bds-color-action-interactive);
}

.c2 input:checked.hover + label::before,
.c2 input:checked:hover + label::before,
.c2 input:checked:focus:hover + label::before {
  border-color: var(--bds-color-action-interactive-hover);
}

.c2 input:checked.focus + label::before,
.c2 input:checked:focus + label::before {
  box-shadow: 0 0 0 2px var(--bds-color-border-default);
}

.c2 input:checked.disabled,
.c2 input:checked:disabled,
.c2 input:checked.disabled + label,
.c2 input:checked:disabled + label {
  cursor: not-allowed;
}

.c2 input:checked.disabled + label::before,
.c2 input:checked:disabled + label::before {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked.disabled + label::after,
.c2 input:checked:disabled + label::after {
  border-color: var(--bds-color-border-disabled);
}

.c2 input:checked,
.c2 input:checked + label {
  cursor: pointer;
}

.c1 {
  display: inline-block;
  position: relative;
  min-width: 3rem;
  min-height: 3rem;
  box-sizing: border-box;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.2),0px 4px 5px rgba(0,0,0,0.14),0px 1px 10px rgba(0,0,0,0.12);
  color: hsl(0,0%,100%,.87);
}

.c1.shape--rounded {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--rounded input + label {
  border-radius: var(--bds-border-radius-lg);
}

.c1.shape--squared {
  border-radius: 0;
}

.c1 .tile-input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.c1 .tile-input input {
  top: 0;
}

.c1 .tile-input label {
  height: 100%;
  width: 100%;
}

.c1 .tile-icon {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.c1 .tile-icon svg {
  display: block;
}

.c1 .tile-icon path {
  fill: hsl(213,73%,68%,1);
}

.c1.type--link:hover,
.c1.type--link.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--link:focus,
.c1.type--link.focus,
.c1.type--link.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--link:disabled,
.c1.type--link.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--link:disabled *,
.c1.type--link.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--link:disabled path,
.c1.type--link.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--link:disabled.color--surface,
.c1.type--link.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio:hover,
.c1.type--radio.hover {
  cursor: pointer;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive),var(--bds-shadows-shadow-03);
}

.c1.type--radio:focus,
.c1.type--radio.focus,
.c1.type--radio.interaction--focus {
  outline: none;
  border: 1px solid var(--bds-color-border-interactive);
  box-shadow: 0 0 0 2px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio:disabled,
.c1.type--radio.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--radio:disabled *,
.c1.type--radio.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--radio:disabled path,
.c1.type--radio.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--radio:disabled.color--surface,
.c1.type--radio.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.type--radio .tile-icon {
  display: none;
}

.c1.type--radio.c0.type--radio.c0.type--radio {
  background: transparent;
}

.c1.type--radio input + label {
  z-index: 0;
}

.c1.type--radio input:checked + label {
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive);
}

.c1.type--radio input:checked + label .tile-icon {
  display: inline-block;
}

.c1.type--radio input:focus + label {
  outline: none;
  box-shadow: 0 0 0 1px var(--bds-color-border-interactive), 0 0 0 3px var(--bds-color-border-default),var(--bds-shadows-shadow-03);
}

.c1.type--radio input + label:before,
.c1.type--radio input + label:after {
  display: none;
}

.c1.type--card:disabled,
.c1.type--card.disabled {
  cursor: not-allowed;
  box-shadow: none;
}

.c1.type--card:disabled *,
.c1.type--card.disabled * {
  color: var(--bds-color-text-disabled);
}

.c1.type--card:disabled path,
.c1.type--card.disabled path {
  fill: var(--bds-color-icon-disabled);
}

.c1.type--card:disabled.color--surface,
.c1.type--card.disabled.color--surface {
  border: 1px solid var(--bds-color-border-subdued);
}

.c1.color--surface {
  background-color: var(--bds-color-elevation-03);
}

.c1.color--subdued {
  background-color: hsl(222,45%,13%,1);
  background-color: var(--bds-color-surface-subdued);
}

<label
    aria-disabled="false"
    class="c0 c1 color--surface shape--rounded type--radio"
  >
    <p>
      Hello World
    </p>
    <span
      class="c2 tile-input"
    >
      <input
        class="backyard radio"
        name="test"
        type="radio"
        value=""
      />
      <label
        class="radio-indicator"
      >
        <div
          class="tile-icon"
        >
          <svg
            aria-hidden="true"
            class="c3 icon icon-check-circle-filled"
            role="presentation"
            style="--style-icon-height: 1.5rem; --style-icon-width: 1.5rem; --style-icon-color: hsl(213, 73%, 60%, 1);"
            viewBox="0 0 16 16"
          >
            <path
              clip-rule="evenodd"
              d="M14 8c0 3.2824-2.7176 6-6 6-3.2765 0-6-2.7176-6-6 0-3.2765 2.7176-6 5.9941-6C11.2765 2 14 4.7235 14 8Zm-8.1464.308 1.212 1.212 3.3736-3.3735a.5001.5001 0 0 1 .7072.707L7.431 10.569a.4557.4557 0 0 1-.031.0285.5.5 0 0 1-.6887-.0175L5.1465 9.0151a.5.5 0 1 1 .707-.7071Z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </label>
    </span>
  </label>
</DocumentFragment>
`;
