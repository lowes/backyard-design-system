{
	"id": 0,
	"name": "@lowes-tech/bds-react/Toast",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 40,
			"name": "default",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 1
		},
		{
			"id": 2,
			"name": "ToastProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 16,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Action text of alert, if defined"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 18,
					"name": "actionLinkProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Exposes props of `Link` action",
						"text": "Useful if you need more customizability than the helper props `actionTo` and `onActionClick`\n"
					},
					"type": {
						"type": "reference",
						"name": "LinkProps"
					}
				},
				{
					"id": 17,
					"name": "actionTo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "`to` helper prop of action `Link`"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 34,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BackyardBaseProps.as"
					}
				},
				{
					"id": 8,
					"name": "autoCloseAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Milliseconds to auto close in, if defined"
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Children of subtitle span"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.children"
					}
				},
				{
					"id": 4,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM Class Name"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.className"
					}
				},
				{
					"id": 5,
					"name": "closeButtonProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Close `IconButton` prop overrides"
					},
					"type": {
						"type": "reference",
						"name": "IconButtonProps"
					}
				},
				{
					"id": 7,
					"name": "closeDelay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Milliseconds of delay until deletion from DOM after close clicked",
						"text": "Useful for allowing animations to play before removal\n"
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6,
					"name": "closed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not alert is closed by default"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10,
					"name": "date",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Date helper to override timestamp with"
					},
					"type": {
						"type": "reference",
						"name": "Date"
					}
				},
				{
					"id": 20,
					"name": "elevation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Elevations to assign to alert",
						"tags": [
							{
								"tag": "default",
								"text": "'true'\n"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "shadow_01"
							},
							{
								"type": "literal",
								"value": "shadow_02"
							},
							{
								"type": "literal",
								"value": "shadow_03"
							},
							{
								"type": "literal",
								"value": "shadow_04"
							},
							{
								"type": "literal",
								"value": "shadow_05"
							},
							{
								"type": "literal",
								"value": "shadow_06"
							}
						]
					}
				},
				{
					"id": 24,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Width of the alert."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.height"
					}
				},
				{
					"id": 13,
					"name": "iconProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon props to override with"
					},
					"type": {
						"type": "reference",
						"name": "PathIconProps"
					}
				},
				{
					"id": 19,
					"name": "multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not to make the title and subtitle on separate lines",
						"tags": [
							{
								"tag": "default",
								"text": "true\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9,
					"name": "noClose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not close is present"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12,
					"name": "noTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not to display timestamp",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Outer shape of the component."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "rounded"
							},
							{
								"type": "literal",
								"value": "squared"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.shape"
					}
				},
				{
					"id": 22,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Size of alert"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "standard"
							},
							{
								"type": "literal",
								"value": "medium"
							},
							{
								"type": "literal",
								"value": "jumbo"
							}
						]
					}
				},
				{
					"id": 15,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Subtitle text of alert",
						"text": "Alternative to using `children`\n"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 11,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Timestamp string",
						"tags": [
							{
								"tag": "default",
								"text": "'Just Now'\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Title text of alert"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 21,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Type of Alert"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "success"
							},
							{
								"type": "literal",
								"value": "warning"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.type"
					}
				},
				{
					"id": 25,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Width of the alert."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.width"
					}
				},
				{
					"id": 30,
					"name": "onActionClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 31,
							"name": "onActionClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onActionClick` trigger function",
								"text": "Helper prop for `onClick` handler on `Link`\nCan be overridden from `actionProps`\n",
								"tags": [
									{
										"tag": "argument",
										"text": "{Event} event - DOM event\n"
									}
								]
							},
							"parameters": [
								{
									"id": 32,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "reference",
												"name": "MouseEvent"
											}
										],
										"name": "MouseEvent"
									}
								},
								{
									"id": 33,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventTarget"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 26,
					"name": "onClose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 27,
							"name": "onClose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onClose` trigger function",
								"text": "Helper prop for `onClick` handler on close\n",
								"tags": [
									{
										"tag": "argument",
										"text": "{Event} event - DOM event\n"
									}
								]
							},
							"parameters": [
								{
									"id": 28,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 36,
										"name": "ToastEvent"
									}
								},
								{
									"id": 29,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventTarget"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16,
						18,
						17,
						34,
						8,
						3,
						4,
						5,
						7,
						6,
						10,
						20,
						24,
						13,
						19,
						9,
						12,
						23,
						22,
						15,
						11,
						14,
						21,
						25
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						30,
						26
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 35,
							"name": "ToastRef"
						},
						{
							"type": "reference",
							"name": "ToastOverrideProps"
						}
					],
					"name": "BackyardBaseProps"
				}
			]
		},
		{
			"id": 36,
			"name": "ToastEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 37,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 38,
									"name": "target",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 35,
										"name": "ToastRef"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										38
									]
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 35,
										"name": "ToastRef"
									}
								],
								"name": "React.MouseEvent"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 35,
										"name": "ToastRef"
									}
								],
								"name": "React.KeyboardEvent"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 39,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 35,
			"name": "ToastRef",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reference",
				"name": "HTMLDivElement"
			}
		},
		{
			"id": 1,
			"name": "Toast",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"comment": {
				"shortText": "Backyard React Toast",
				"text": "Component for displaying severity levels of 'success', 'info', 'warning', 'error' with a timestamp\n\nThis component is similar to `Alert`\n\nThe toast is closeable by default\n\nBy default, a local timestamp is created when the toast is created\nAn external pre-computed timestamp and text can be supplied via `timestamp` prop\nAn external pre-computed JS Date can be given via `date` prop as well\n\nThe toast is always multiline\n\n <Toast\n     type=\"info\"\n     title=\"Note\"\n >\n     This is the subtitle of the toast.\n </Toast>\n"
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 2,
						"name": "ToastProps"
					}
				],
				"name": "BDSForwardRef"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				40
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				2
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				36,
				35
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	]
}