{
	"id": 0,
	"name": "@lowes-tech/bds-react/Radio",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 17,
			"name": "default",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 1
		},
		{
			"id": 2,
			"name": "RadioProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 15,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BackyardBaseProps.as"
					}
				},
				{
					"id": 4,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not `Radio` is checked\nUse for a controlled component"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.checked"
					}
				},
				{
					"id": 3,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Customize a label for the radio input"
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.children"
					}
				},
				{
					"id": 7,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM Class Name"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.className"
					}
				},
				{
					"id": 5,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not the radio is checked by default\nUse for an uncontrolled component"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.defaultChecked"
					}
				},
				{
					"id": 6,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not `Radio` is disabled"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.disabled"
					}
				},
				{
					"id": 8,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM ID of `input`"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.id"
					}
				},
				{
					"id": 9,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM Name of `input`\nNote: Required when NOT a child of `RadioGroup`"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.name"
					}
				},
				{
					"id": 13,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Value of `input`"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.value"
					}
				},
				{
					"id": 14,
					"name": "wrapperProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Props to apply to wrapper\nUseful for setting style of wrapper instead of `input`"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							},
							{
								"type": "literal",
								"value": ""
							}
						],
						"name": "BackyardBaseProps"
					}
				},
				{
					"id": 10,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onChange` function triggered when value of `input` changes\nChained through `RadioGroup` parent if present"
							},
							"parameters": [
								{
									"id": 12,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FormEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BackyardBaseProps.onChange"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						15,
						4,
						3,
						7,
						5,
						6,
						8,
						9,
						13,
						14
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						10
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 16,
							"name": "RadioRef"
						}
					],
					"name": "BackyardBaseProps"
				}
			]
		},
		{
			"id": 16,
			"name": "RadioRef",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reference",
				"name": "HTMLInputElement"
			}
		},
		{
			"id": 1,
			"name": "Radio",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"comment": {
				"shortText": "Backyard React Radio",
				"text": "Radio for interacting with selections in a form.\n\n> Note: `name` is required when not a child of `RadioGroup` with a name\n\n <Radio id=\"radio\" />\n\nTo give `Radio` a label, use `FormControlLabel`, similar to `Checkbox` and `Switch`:\n\n <FormControlLabel\n     control={<Radio id=\"radio\" name=\"radio\" />}\n     label=\"Label\"\n />\n\nTo give `Radio` helper text, use `FormHelperText` inside a `FormControl`:\n\n> Note: When grouping `Radio`s together, use the `RadioGroup` to sync multiple\n> radios together with one `name`, one `onChange`, and even set a `defaultValue`.\n\n <FormControl>\n     <FormHeading>What color was Gandalf's robes in LotR?</FormHeading>\n     <RadioGroup\n         name=\"gandalf_robe\"\n         defaultValue=\"gray\"\n     >\n         <FormControlLabel\n             control={<Radio id=\"radio_white\" value=\"white\" />}\n             label=\"White\"\n         />\n         <FormControlLabel\n             control={<Radio id=\"radio_gray\" value=\"gray\" />}\n             label=\"Gray\"\n         />\n         <FormControlLabel\n             control={<Radio id=\"radio_both\" value=\"both\" />}\n             label=\"Both\"\n         />\n     </RadioGroup>\n     <FormHelperText>Select the right answer</FormHelperText>\n </FormControl>\n"
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 2,
						"name": "RadioProps"
					}
				],
				"name": "BDSForwardRef"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				17
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				2
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				16
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	]
}