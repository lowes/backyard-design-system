{
	"id": 0,
	"name": "@lowes-tech/bds-react/Select",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 76,
			"name": "default",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 1
		},
		{
			"id": 57,
			"name": "Option",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 58,
					"name": "bdsName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						58
					]
				}
			]
		},
		{
			"id": 68,
			"name": "OptionGroup",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 69,
					"name": "bdsName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						69
					]
				}
			]
		},
		{
			"id": 70,
			"name": "OptionGroupProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 75,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BackyardBaseProps.as"
					}
				},
				{
					"id": 71,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.children"
					}
				},
				{
					"id": 72,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.className"
					}
				},
				{
					"id": 73,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.disabled"
					}
				},
				{
					"id": 74,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.label"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						75,
						71,
						72,
						73,
						74
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLOptGroupElement"
						}
					],
					"name": "BackyardBaseProps"
				}
			]
		},
		{
			"id": 59,
			"name": "OptionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 66,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BackyardBaseProps.as"
					}
				},
				{
					"id": 60,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.children"
					}
				},
				{
					"id": 61,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.className"
					}
				},
				{
					"id": 62,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.disabled"
					}
				},
				{
					"id": 63,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.hidden"
					}
				},
				{
					"id": 65,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 59,
							"name": "OptionProps"
						}
					}
				},
				{
					"id": 64,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.value"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						66,
						60,
						61,
						62,
						63,
						65,
						64
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLOptionElement"
						}
					],
					"name": "BackyardBaseProps"
				}
			]
		},
		{
			"id": 49,
			"name": "SelectOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 52,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 50,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 53,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 49,
							"name": "SelectOption"
						}
					}
				},
				{
					"id": 51,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						52,
						50,
						53,
						51
					]
				}
			],
			"indexSignature": {
				"id": 54,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 55,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 2,
			"name": "SelectProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 40,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ElementType"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BackyardBaseProps.as"
					}
				},
				{
					"id": 3,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "List of options in declarative `Option` or `OptionGroup` elements",
						"text": "Is required if `options` is not defined,\nWill be overridden by `options` if both defined.\n"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 70,
											"name": "OptionGroupProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 59,
											"name": "OptionProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.children"
					}
				},
				{
					"id": 4,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "DOM Class Name"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.className"
					}
				},
				{
					"id": 6,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Default value of input"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.defaultValue"
					}
				},
				{
					"id": 5,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not input is disabled"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.disabled"
					}
				},
				{
					"id": 8,
					"name": "iconClosed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon displayed when closed"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					}
				},
				{
					"id": 7,
					"name": "iconOpened",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon displayed when opened"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					}
				},
				{
					"id": 9,
					"name": "interaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Initial interaction given to component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 39,
					"name": "itemBefore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					}
				},
				{
					"id": 10,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Label of the `Select` component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Data-driven list of options to provide to select",
						"text": "Is required if `children` not defined,\nWill override `children` if both defined.\n"
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 49,
							"name": "SelectOption"
						}
					}
				},
				{
					"id": 11,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visual shape of text input"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "rounded"
							},
							{
								"type": "literal",
								"value": "squared"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.shape"
					}
				},
				{
					"id": 12,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Size of component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "jumbo"
							},
							{
								"type": "literal",
								"value": "large"
							},
							{
								"type": "literal",
								"value": "medium"
							},
							{
								"type": "literal",
								"value": "small"
							}
						]
					}
				},
				{
					"id": 15,
					"name": "stacked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visual state of component"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "default"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "success"
							}
						]
					}
				},
				{
					"id": 14,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Type of text input"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.type"
					}
				},
				{
					"id": 37,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Controlled value of the select input"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "BackyardBaseProps.value"
					}
				},
				{
					"id": 38,
					"name": "wrapperProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Wrapper props object for text input.\nUseful for setting the style of text input\nvisual container instead of input directly"
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLDivElement"
							},
							{
								"type": "literal",
								"value": ""
							}
						],
						"name": "BackyardBaseProps"
					}
				},
				{
					"id": 32,
					"name": "onBlur",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "onBlur",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onBlur` trigger event"
							},
							"parameters": [
								{
									"id": 34,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "DOM Event"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSelectElement"
											},
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								},
								{
									"id": 35,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "option info object\n"
									},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "SelectOptionInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 17,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onChange` trigger event"
							},
							"parameters": [
								{
									"id": 18,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "DOM Event"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSelectElement"
											}
										],
										"name": "ChangeEvent"
									}
								},
								{
									"id": 19,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "option info object\n"
									},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "SelectOptionInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 20,
					"name": "onClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 21,
							"name": "onClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onClick` trigger event"
							},
							"parameters": [
								{
									"id": 22,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "DOM Event"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSelectElement"
											},
											{
												"type": "reference",
												"name": "MouseEvent"
											}
										],
										"name": "MouseEvent"
									}
								},
								{
									"id": 23,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "option info object\n"
									},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "SelectOptionInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 28,
					"name": "onFocus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 29,
							"name": "onFocus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onFocus` trigger event"
							},
							"parameters": [
								{
									"id": 30,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "DOM Event"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSelectElement"
											},
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								},
								{
									"id": 31,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "option info object\n"
									},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "SelectOptionInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "onKeyDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 25,
							"name": "onKeyDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "`onKeyDown` trigger event"
							},
							"parameters": [
								{
									"id": 26,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "DOM Event"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSelectElement"
											}
										],
										"name": "KeyboardEvent"
									}
								},
								{
									"id": 27,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "option info object\n"
									},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "SelectOptionInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						40,
						3,
						4,
						6,
						5,
						8,
						7,
						9,
						39,
						10,
						36,
						11,
						12,
						15,
						13,
						14,
						37,
						38
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						32,
						16,
						20,
						28,
						24
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 41,
							"name": "SelectRef"
						},
						{
							"type": "reference",
							"name": "SelectOverrideProps"
						}
					],
					"name": "BackyardBaseProps"
				}
			]
		},
		{
			"id": 42,
			"name": "SelectOptionInfo",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 47,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "disabled"
								},
								"objectType": {
									"type": "reference",
									"id": 59,
									"name": "OptionProps"
								}
							}
						},
						{
							"id": 44,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 48,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "children"
								},
								"objectType": {
									"type": "reference",
									"id": 59,
									"name": "OptionProps"
								}
							}
						},
						{
							"id": 46,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "children"
								},
								"objectType": {
									"type": "reference",
									"id": 59,
									"name": "OptionProps"
								}
							}
						},
						{
							"id": 45,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "value"
								},
								"objectType": {
									"type": "reference",
									"id": 59,
									"name": "OptionProps"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								47,
								44,
								48,
								46,
								45
							]
						}
					]
				}
			}
		},
		{
			"id": 41,
			"name": "SelectRef",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"type": {
				"type": "reference",
				"name": "HTMLSelectElement"
			}
		},
		{
			"id": 56,
			"name": "Option",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 59,
						"name": "OptionProps"
					}
				],
				"name": "BDSFunctional"
			},
			"defaultValue": "..."
		},
		{
			"id": 67,
			"name": "OptionGroup",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 70,
						"name": "OptionGroupProps"
					}
				],
				"name": "BDSFunctional"
			},
			"defaultValue": "..."
		},
		{
			"id": 1,
			"name": "Select",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"comment": {
				"shortText": "Backyard React Select",
				"text": "Select component that uses native option selection; see `Dropdown` for a custom selector...\n\n```\n <Select>\n     <Option value=\"1\">Option 1</Option>\n     <Option value=\"2\">Option 2</Option>\n     <Option value=\"3\">Option 3</Option>\n </Select>\n```\n\nCan group options via `OptionGroup` and allow native selection to handle visuals\n\n```\n <Select>\n     <OptionGroup\n         label=\"Group 1\"\n     >\n         <Option value=\"11\">Option 1</Option>\n         <Option value=\"12\">Option 2</Option>\n         <Option value=\"13\">Option 3</Option>\n     </OptionGroup>\n     <OptionGroup\n         label=\"Group 2\"\n     >\n         <Option value=\"21\">Option 1</Option>\n         <Option value=\"22\">Option 2</Option>\n         <Option value=\"23\">Option 3</Option>\n     </OptionGroup>\n </Select>\n```\n\nTo include helper text, wrap in `FormControl` and use `FormHelperText` to sync visual states\n\n```\n <FormControl>\n     <Select>\n         <Option value=\"1\">Option 1</Option>\n         <Option value=\"2\">Option 2</Option>\n         <Option value=\"3\">Option 3</Option>\n     </Select>\n     <FormHelperText>Helper Text</FormHelperText>\n </FormControl>\n```\n"
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 2,
						"name": "SelectProps"
					}
				],
				"name": "BDSForwardRef"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				76
			]
		},
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				57,
				68
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				70,
				59,
				49,
				2
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				42,
				41
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				56,
				67,
				1
			]
		}
	]
}